<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>周小猪</title>
    <link>http://ganodermaking.github.io/</link>
    <description>Recent content on 周小猪</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 13 Jan 2021 15:33:14 +0800</lastBuildDate><atom:link href="http://ganodermaking.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>掌握核心技术之ElasticSearch</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Belasticsearch/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Belasticsearch/</guid>
      <description>Elasticsearch 是一个分布式可扩展的实时搜索和分析引擎，一个建立在全文搜索引擎 Apache Lucene(TM) 基础上的搜索引擎。使用一种称为 倒排索引 的结构，它适用于快速的全文搜索。</description>
    </item>
    
    <item>
      <title>掌握核心技术之Eureka</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Beureka/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Beureka/</guid>
      <description>ZooKeeper注册中心集群搭建后，集群中各节点呈现主从关系，集群中只有主节点对外提供服务的注册和发现功能，从节点相当于备份节点，只有主节点宕机时，从节点会选举出一个新的主节点，继续提供服务的注册和发现功能。而Eureka Server注册中心集群中每个节点都是平等的，集群中的所有节点同时对外提供服务的发现和注册等功能。</description>
    </item>
    
    <item>
      <title>掌握核心技术之Golang</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bgolang/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bgolang/</guid>
      <description>不要通过共享内存来通信，而应该通过通信来共享内存。</description>
    </item>
    
    <item>
      <title>掌握核心技术之Java</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bjava/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bjava/</guid>
      <description>Java 是由 Sun Microsystems 公司于 1995 年 5 月推出的 Java 面向对象程序设计语言和 Java 平台的总称。</description>
    </item>
    
    <item>
      <title>掌握核心技术之MongoDB</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bmongodb/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bmongodb/</guid>
      <description>MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。 MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。</description>
    </item>
    
    <item>
      <title>掌握核心技术之MySQL</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bmysql/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bmysql/</guid>
      <description>MySQL 是最流行的关系型数据库管理系统，在 WEB 应用方面 MySQL 是最好的 RDBMS(Relational Database Management System：关系数据库管理系统)应用软件之一。</description>
    </item>
    
    <item>
      <title>掌握核心技术之RabbitMQ</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Brabbitmq/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Brabbitmq/</guid>
      <description>RabbitMQ是一个流行的开源消息队列系统，是AMQP（高级消息队列协议）标准的实现，由以高性能、健壮、可伸缩性出名的Erlang语言开发。 RabbitMQ是一个开源的消息代理和队列服务器，用来通过普通协议在完全不同的应用之间共享数据，RabbitMQ使用Erlang编写，并且基于AMQP协议。</description>
    </item>
    
    <item>
      <title>掌握核心技术之Redis</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bredis/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bredis/</guid>
      <description>Redis 是一个开源（BSD许可）的，内存中的数据结构存储系统，它可以用作数据库、缓存和消息中间件。</description>
    </item>
    
    <item>
      <title>掌握核心技术之Zookeeper</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bzookeeper/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bzookeeper/</guid>
      <description>ZooKeeper是一个针对大型分布式系统的可靠协调系统，提供的功能包括：配置维护、名字服务、分布式同步、组服务等。</description>
    </item>
    
    <item>
      <title>掌握核心技术之微服务</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bkafka/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8Bkafka/</guid>
      <description>Kafka是高吞吐低延迟的高并发、高性能的消息中间件。</description>
    </item>
    
    <item>
      <title>掌握核心技术之微服务</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E5%BE%AE%E6%9C%8D%E5%8A%A1/</guid>
      <description>服务网关 服务网关 = 路由转发 + 过滤器  路由转发：接收一切外界请求，转发到后端的微服务上去； 过滤器：在服务网关中可以完成一系列的横切功能，例如权限校验、限流以及监控等。  注册中心  Eureka：支持AP，保证高可用。 Zookeeper：支持CP，保证强一致性。 Nacos：同时支持AP和CP，同时还支持配置中心。  长轮询 服务端收到客户端发来的请求后不直接响应，而是将请求hold住一段时间，在这段时间内如果数据有变化，服务端才会响应，如果没有变化则在到达一定的时间后才返回请求。</description>
    </item>
    
    <item>
      <title>掌握核心技术之算法</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%AE%97%E6%B3%95/</guid>
      <description>算法（Algorithm）是指解题方案的准确而完整的描述，是一系列解决问题的清晰指令，算法代表着用系统的方法描述解决问题的策略机制。</description>
    </item>
    
    <item>
      <title>掌握核心技术之网络</title>
      <link>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Wed, 13 Jan 2021 15:33:14 +0800</pubDate>
      
      <guid>http://ganodermaking.github.io/post/%E6%8E%8C%E6%8F%A1%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF%E4%B9%8B%E7%BD%91%E7%BB%9C/</guid>
      <description>计算机网络学习的核心内容就是网络协议的学习。网络协议是为计算机网络中进行数据交换而建立的规则、标准或者说是约定的集合。</description>
    </item>
    
  </channel>
</rss>
